# This workflow will install Python dependencies, run tests and lint with flake8,
# and publish a package to PyPI
# For more information see:
#     https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Publish Python Package

on:
  push:
    branches:
      - main # or your main branch
    tags:        # Trigger on tags, which is good for releases
      - 'v*'     # Matches tags like v1.0, v2.3.4
  pull_request: # optional, for running checks on PRs
    branches:
      - main # or your main branch

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"] # Test with these Python versions

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -e ".[dev,test]" # Install your package in editable mode with dev and test dependencies.
        #  Consider using separate requirements files (e.g., requirements.txt, dev-requirements.txt, test-requirements.txt)
        #  If you do, install them like this:
        #  python -m pip install -r requirements.txt
        #  python -m pip install -r dev-requirements.txt
        #  python -m pip install -r test-requirements.txt
    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-line-length=127 --statistics
    - name: Run tests with pytest and coverage
      run: |
        pytest --cov=./ --cov-report=xml # Generate coverage report for codecov
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        fail_ci_if_error: true # fail CI if the codecov check fails
  publish:
    runs-on: ubuntu-latest
    needs: build  # Ensure 'build' job completes successfully before publishing
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"  # Use a specific Python version for publishing
      - name: Install build and twine
        run: |
          python -m pip install --upgrade pip
          python -m pip install build twine
      - name: Build package
        run: python -m build
      - name: Publish to PyPI
        if: startsWith(github.ref, 'refs/tags/v')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_TOKEN }}
